---
title: "SOK-1004 H24 - Case 4"
author: "30"
format: pdf
editor: visual
---

# Instruksjoner

Denne oppgaven er laget av Even S. Hvinden og oppdatert av Derek J. Clark. Sistnevnte er ansvarlig for eventuelle feil og mangler.

Oppgaven skal løses interaktivt i RStudio ved å legge inn egen kode og kommentarer. Det ferdige dokumentet lagres med kandidatnummeret som navn `[kandidatnummer]_SOK1004_C4_H24.qmd` og lastes opp på deres GitHub-side. Hvis du har kandidatnummer 43, så vil filen hete `43_SOK1004_C4_H22.qmd`. Påse at koden kjører og at dere kan eksportere besvarelsen til pdf. Lever så lenken til GitHub-repositoriumet i Canvas.

# Bakgrunn, læringsmål

Innovasjon er en kilde til økonomisk vekst. I denne oppgaven skal vi se undersøke hva som kjennetegner bedriftene som bruker ressurser på forskning og utvikling (FoU). Dere vil undersøke FoU-kostnader i bedriftene fordelt på næring, antall ansatte, og utgiftskategori. Gjennom arbeidet vil dere repetere på innhold fra tidligere oppgaver og øve på å presentere fordelinger av data med flere nivå av kategoriske egenskaper.

# Last inn pakker

```{r}
# output | false
rm(list=ls()) 
library(tidyverse)
library(rjstat)
library(gdata)
library(httr)
```

# Oppgave I: Introduksjon til histogram

Et histogram eller frekvensfordeling er en figur som viser hvor ofte forskjellige verdier oppstår i et datasett. Frekvensfordelinger spiller en grunnleggende rolle i statistisk teori og modeller. Det er avgjørende å forstå de godt. En kort innføring følger. Du kan lese om histogram i [R for Data Science, kap 1.4](https://r4ds.hadley.nz/data-visualize#visualizing-distributions)

La oss se på et eksempel. I datasettet `mtcars` viser variabelen `cyl` antall sylindere i motorene til kjøretøyene i utvalget.

```{r}
data(mtcars)
mtcars %>%
  ggplot(aes(cyl)) +
  geom_histogram() +
  theme_minimal()
```

Verdiene av variabelen er er gitt ved den horisontale aksen, antall observasjoner på den vertikale aksen. Vi ser at det er 11, 7, og 14 biler med henholdsvis 4, 6, og 8 sylindere.

La oss betrakte et eksempel til. Variabelen `mpg` i `mtcars` måler gjennomsnittlig drivstoffforbruk i amerikanske enheter. Variabelen er målt med ett desimal i presisjon.

```{r}
data(mtcars)
mtcars %>%
  ggplot(aes(mpg)) +
  geom_histogram(binwidth=0.2) +
  theme_minimal()
```

Datasettet inneholder mange unike verdier, hvilket gir utslag i et flatt histogram, noe som er lite informativt. Løsningen da er å gruppere verdier som ligger i nærheten av hverandre. Kommandoen `binwidth` i `geom_histogram()` bestemmer bredden av intervallene som blir slått sammen. Kan du forklare hvorfor alle unike verdier blir telt ved å å bruke `binwidth = 0.1?`

Eksperimenter med forskjellige verdier for `binwidth` og forklar hva som kjennetegner en god verdi.

**Svar på oppgave 1**

Jo høyere tall man setter inn på binwidth, jo flere observasjoner blir gruppert sammen, og jo mere tredimensjonalt blir histogrammet. Når vi da får gruppert disse observasjonene sammen gjør det at histogrammet blir enklere å lese av, og det blir lettere å danne seg et helhetlig bilde av dataene.

En god binwidth vil da være en som har hverken for få eller for mange observasjoner gruppert sammen. Slik blir histogrammet hverken for rotete eller for simpelt. Det er viktig at daten kommer tydelig fram, slik at vi kan se en tydelig form, og vi kan se blant annet toppene og dalene i dataen.

# Oppgave II: Last ned og rydd i data

Vi skal nå undersøkene dataene i [Tabell 07967: Kostnader til egenutført FoU-aktivitet i næringslivet, etter næring (SN2007) og sysselsettingsgruppe (mill. kr) 2007 - 2022 SSB](https://www.ssb.no/statbank/table/07967). Dere skal laster de ned ved hjelp av API. Se [brukerveiledningen](https://www.ssb.no/api/pxwebapi/_/attachment/inline/019c05e0-35ad-4757-87a0-ba7fbf4a68e2:46a164479bc10a67eee4b472cd891f001ca19da5/Api_brukerveiledning.pdf) her.

Bruk en JSON-spørring til å laste ned alle statistikkvariable for alle år, næringer, og sysselsettingsgrupper med 10-19, 20-49, 50-99, 100-199, 200 - 499, og 500 eller flere ansatte. Lagre FoU-kostnader i milliarder kroner. Sørg for at alle variabler har riktig format, og gi de gjerne enklere navn og verdier der det passer.

**Hint.** Bruk lenken til SSB for å hente riktig JSON-spørring og tilpass koden fra case 3.

```{r}
# besvar oppgave II her

url <- "https://data.ssb.no/api/v0/no/table/07967/"
  
query <- '{
  "query": [
    {
      "code": "NACE2007",
      "selection": {
        "filter": "item",
        "values": [
          "A-N",
          "C",
          "G-N",
          "A-B_D-F"
        ]
      }
    },
    {
      "code": "SyssGrp",
      "selection": {
        "filter": "item",
        "values": [
          "10-19",
          "20-49",
          "50-99",
          "100-199",
          "200-499",
          "500+"
        ]
      }
    }
  ],
  "response": {
    "format": "json-stat2"
  }
}'



hent_indeks.tmp <- url %>%
  POST(body = query, encode = "json")


df <-  hent_indeks.tmp %>%
  content("text") %>%
  fromJSONstat() %>%
  as_tibble()

```

```{r}
# Gir nye navn og verdier

df <- df %>%
  mutate(år = as.integer(år)) %>%
  mutate(value = value / 10^3) %>%
  rename(
    næring = "næring (SN2007)",
    gruppe = "sysselsettingsgruppe",
    variabel = "statistikkvariabel",
    verdi = "value"
  )

```

# Oppgave III: Undersøk fordelingen

Vi begrenser analysen til bedrifter med minst 20 ansatte og tall fra 2015 - 2022. Lag en figur som illustrerer fordelingen av totale FoU-kostnader fordelt på type næring (industri, tjenesteyting, andre) og antall ansatte i bedriften (20-49, 50-99, 100-199, 200-499, 500 og over). Tidsdimensjonen er ikke vesentlig, så bruk gjerne histogram.

**Merknad.** Utfordringen med denne oppgaven er at fordelingene er betinget på verdien av to variable. Kommandoen `facet_grid()` kan være nyttig til å slå sammen flere figurer på en ryddig måte.

```{r}
# besvar oppgave III her


df <- df %>%
  mutate(gruppe = str_replace(gruppe, " sysselsatte", "")) %>%
  mutate(variabel = str_replace(variabel, "Kostnader til innleid personale", "Innleie")) %>%
  mutate(gruppe = str_replace(gruppe, "500 og over", ">500"))

 
unique(df$gruppe)

 
df <- subset(df, år >= 2015 & år <= 2023)



df %>%
  filter(gruppe %in% c("20-49", "50-99", "100-199", "200-499", ">500")) %>%
  filter(næring %in% c("Industri", "Tjenesteyting", "Andre næringer")) %>%
  filter(variabel %in% c("FoU-kostnader i alt")) %>%
  ggplot(aes(verdi)) +
  geom_histogram(binwidth = 0.25, fill = "orange", alpha = 0.5) +
  facet_grid(factor(gruppe, levels = c("20-49", "50-99", "100-199", "200-499", ">500")) ~ næring) +
  labs(title = "Fordeling av totale FoU-kostnader på ulike næringer",
       subtitle = "Industri, tjenesteyting, andre (2015 - 2023)",
       x = "Milliarder kroner",
       y = "Antall observasjoner"
       ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
    plot.subtitle = element_text(hjust = 0.5)
    )


```

# Oppgave IV: Undersøk fordelingen igjen

Kan du modifisere koden fra oppgave III til å i tillegg illustrere fordelingen av FoU-bruken på lønn, innleie av personale, investering, og andre kostnader?

**Merknad.** Kommandoen `fill = [statistikkvariabel]` kan brukes i et histogram.

```{r}
# besvar oppgave IV her


df %>%
  filter(gruppe %in% c("20-49", "50-99", "100-199", "200-499", ">500")) %>%
  filter(næring %in% c("Industri", "Tjenesteyting", "Andre næringer")) %>%
  filter(variabel %in% c("FoU-kostnader i alt", "Lønnskostnader", "Innleie", "Andre driftskostnader")) %>%
  ggplot(aes(verdi, fill = variabel)) +
  geom_histogram(binwidth = 0.75, alpha = 0.5, position = "dodge") +
  facet_grid(factor(gruppe, levels = c("20-49", "50-99", "100-199", "200-499", ">500")) ~ næring) +
  labs(title = "Fordeling av ulike kostnader på næringer",
       subtitle = "Industri, tjenesteyting, andre (2015 - 2023)",
       x = "Milliarder kroner",
       y = "Antall observasjoner"
       ) +
  theme_minimal() +
  ylim(0, 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
    plot.subtitle = element_text(hjust = 0.5),
    legend.position = "bottom"
    )

```
